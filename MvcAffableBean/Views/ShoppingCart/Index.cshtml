@using System.Diagnostics.Eventing.Reader
@using System.Globalization
@model MvcAffableBean.ViewModels.ShoppingCartViewModel

@{
    ViewBag.Title = "Store Checkout";
    CultureInfo us = new CultureInfo("en-US");
    CultureInfo india = new CultureInfo("hi-IN");
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
@Html.Hidden("hdnCulture", @india);
@Scripts.Render("~/bundles/jquery")
<style>
    .itemList {
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: 0;
        top: 400px;
        left: 50%;
        margin: -100px 0 0 -150px;
    }

    .small-button-plus {
        background-color: #ce1653;
        border: none;
        color: white;
        text-align: middle;
        text-decoration: none;
        display: inline-block;
        font-size: 17px;
        margin: 4px 2px;
        cursor: pointer;
        font-weight: bold;
        width: 38px;
        height: 22px;
    }

    .small-button-minus {
        background-color: #ce1653;
        border: none;
        color: white;
        text-align: middle;
        text-decoration: none;
        display: inline-block;
        font-size: 17px;
        margin: 4px 2px;
        cursor: pointer;
        font-weight: bold;
        width: 38px;
        height: 22px;
    }

    .btn-site-large {
        color: white;
        border-color: white;
        height: 30px;
        text-align: center;
        /* overflow-x: visible; */
        /*overflow-y: visible;*/
        float: right;
        /*padding-right: 50px;*/
        background-color: #ce1653;
        font-weight: bold;
        font-size: 15px;
        /*border-radius: 10px;*/
    }
    .btn {
    display: inline-block;
    margin-bottom: 0;
    font-weight: normal;
    text-align: center;
    vertical-align: middle;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: 1px solid transparent;
    white-space: nowrap;
    padding: 6px 80px;
    font-size: 14px;
    line-height: 1.42857143;
    border-radius: 4px;
    -webkit-user-select: none;
    float: right;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
color: white;
        border-color: white;
        height: 30px;
        text-align: center;       
        float: right;
        background-color: #ce1653;
        font-weight: bold;
        font-size: 15px;
}
.btn-success {
    color: #ffffff;
    background-color: #ce1653;
    /*border-color: #4cae4c;*/
}


    .shop-and-checkoutdiv {
        max-height: 340px;
        /*padding-right: 15px;*/
        padding-left: 800px;
        overflow-x: visible;
        border-top: 1px solid transparent;
        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
        -webkit-overflow-scrolling: touch;
    }
</style>
<h3 class="text-center">
    <span><img src="~/Content/Images/shoping_cart.png" />Your shopping cart:</span>
</h3>
<div id="update-message" class="text-info">
</div>
@if (Model.CartItems.Count == 0)
{
    <div>
        <a class="btn-danger" href="~/StoreFront/Index/1">Your shopping cart is empty, continue shopping---></a>
    </div>
}
else
{
    <div class="">
        <table class="table-responsive table-bordered table-striped">
            <tr>
                <th>
                    Item
                </th>
                <th>
                    Price
                </th>
                <th>
                    Quantity
                </th>
                <th>Sub-total</th>
                <th></th>
            </tr>
            @foreach (var item in Model.CartItems)
            {
                <tr id="row-@item.ProductId">
                    <td>
                        <p id="@item.ProductId">
                            @item.Product.Name
                        </p>
                    </td>
                    <td class="td-price-@item.ProductId">
                        @item.Product.Price
                    </td>
                    <td id="item-count-@item.ProductId">  
                        @{
                            var Quantity = 0;
                            if (@item.Count > 0)
                            { Quantity = @item.Count; }
                            else { Quantity = 1; }

                        }                      
                        <div>
                            <input type="button" class="small-button-minus" data-id="@item.ProductId" id="btnMinus_@item.ProductId" value="-" />
                            <input type="text" readonly="readonly" name="Quantity" style="width:70px" value="@Quantity" class="Quantity" id="txtQuantity_@item.ProductId">
                            <input type="button" class="small-button-plus" data-id="@item.ProductId" id="btnPlus_@item.ProductId" value="+" />
                        </div>

                    </td>
                    <td class="td-subtotal-@item.ProductId">                       
                        @((item.Product.Price * item.Count).ToString("c", india))
                        
                    </td>
                    <td>
                        <a href="" class="RemoveLink" data-id="@item.ProductId"><img  src="~/Content/Images/close_btn.gif" />                            
                            @*Remove from cart*@
                        </a>
                    </td>
                </tr>
                            }
            <tr>
                <td>
                    Total
                </td>
                <td></td>
                <td></td>
                <td id="cart-total" class="text-success">
                    @Html.HiddenFor(model => @Model.CartTotal, new { Id = "hdnAmount" })                    
                    <b>@Model.CartTotal.ToString("C", india)</b>
                </td>
            </tr>
        </table>
    </div>
    <div id="exampleModalLong" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-body">
            <div id="partial"></div>
        </div>
    </div>
    @*<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="partial"></div>
                </div>
            </div>
        </div>
    </div>*@
    <div class="shop-and-checkoutdiv">
        <div>
            <button id="btnShopping" class="btn-site-large">Continue shopping</button>
        </div>
        <div>
    @*@Html.ActionLink("Checkout>>", "LoadMobileRegistrationView", "Accounts",null, new { @class = "modal-link btn btn-success" })*@
            <input class="search btn-site-large" type="button" value="CheckOut >>"
                   data-assigned-id="1" data-toggle="modal" data-target="#exampleModalLong" />
        </div>
    </div>

    <script type="text/javascript">
        var itemCount, subTotal,netTotal,cartTotal,culture;
        $(document).ready(function () {
            $("#exampleModalLong").hide();
            $("#btnShopping").click(function () {
                window.location = '@Url.Action("Index", "StoreFront")' + '?' + 'id=1';
            });

            $('.search').click(function () {
                var id = $(this).data('assigned-id');
                var route = '@Url.Action("LoadMobileRegistrationView", "Accounts")'+'?'+'Total='+0;
                $('#partial').load(route);
                console.log(route);
            });

            $(".RemoveLink").click(function (e) {
                e.preventDefault();
                // Get the id from the link
                var recordToDelete = $(this).attr("data-id");
                if (recordToDelete != '') {
                    // Perform the ajax post
                    $.post("/ShoppingCart/RemoveFromCart", { "id": recordToDelete },
                        function (data) {
                            // Successful requests get here
                            // Update the page elements
                            if (data.ItemCount == 0) {
                                $('#row-' + data.DeleteId).fadeOut('slow');
                            } else {
                                $('#item-count-' + data.DeleteId).text(data.ItemCount);
                            }
                            $('#cart-total').text(data.CartTotal);
                            $('#update-message').text(data.Message);
                            $('#cart-status').text('Cart (' + data.CartCount + ')');
                            if (data.CartCount==0) {
                                $('.search btn-site-large').attr("disabled", "disabled");
                                console.log(data.CartCount);}
                            else{ $('.search btn-site-large').removeAttr("disabled"); }
                        });
                    
                }
                    //disable checkout button if no item in the cart
            });
        });


        culture=$("#hdnCulture").val();
        $(".small-button-plus").on('click', function () {
            //update the database
            var recordToAdd = $(this).attr("data-id");
            if (recordToAdd != '') {
                // Perform the ajax post
                $.post("/ShoppingCart/AddToCart", { "id": recordToAdd,"Navflag":true},
                    function () {
                    });
            }
            cartTotal=@(Convert.ToInt32(Session["CartCount"]));
            cartTotal=cartTotal+1;
            var id = $(this).attr("id");
            var idvalue = id.split('_');
            itemCount = parseFloat($("#txtQuantity_" + idvalue[1]).val()) + 1;
            //var price=$(".td-price-" + idvalue[1]).text();
            subTotal = itemCount * parseFloat($(".td-price-" + idvalue[1]).text());
             var total=$.trim($("#cart-total").text().replace(",",""));
             netTotal=parseFloat($.trim(total.substring(1,total.length))) +parseFloat($(".td-price-" + idvalue[1]).text());

            $("#txtQuantity_" + idvalue[1]).val(itemCount);
            $(".td-subtotal-" + idvalue[1]).html("&#8377; " + subTotal.toFixed(2));
            //$('#cart-total').text(cartTotal+parseFloat($(".td-price-" + idvalue[1]).text()));
            $("#cart-total").html("&#8377; "+ netTotal.toFixed(2));
            $('#cart-status').text('Cart (' + cartTotal + ')');
        });

        $(".small-button-minus").click(function () {
            //update databas
            var id = $(this).attr("id");
            var idvalue = id.split('_');
            if ($("#txtQuantity_" + idvalue[1]).val() > 1)
            {
                var recordToRemove = $(this).attr("data-id");
                if (recordToRemove != '') {
                    // Perform the ajax post
                    $.post("/ShoppingCart/AddToCart", { "id": recordToRemove,"Navflag":false},
                        function () {
                            // Successful requests get here
                            // Update the page elements
                            //$('#cart-status').text('Cart (' + data.CartCount + ')');
                        });
                }
            }
            if ($("#txtQuantity_" + idvalue[1]).val() > 1) {
                var itemCount = parseFloat($("#txtQuantity_" + idvalue[1]).val()) - 1;
                subTotal = itemCount * parseFloat($(".td-price-" + idvalue[1]).text())
                var total=$.trim($("#cart-total").text());
                netTotal=parseFloat(total.substring(1,total.length)) -parseFloat($(".td-price-" + idvalue[1]).text());
                $("#txtQuantity_" + idvalue[1]).val(itemCount);
                $(".td-subtotal-" + idvalue[1]).html("&#8377; "+subTotal.toFixed(2));
                $("#cart-total").html("&#8377; "+ netTotal.toFixed(2));
                }
        });


    </script>
 }
